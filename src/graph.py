from cProfile import label
import pydot

graph = pydot.Dot("my_graph", graph_type='digraph')

for i in range(190):
    graph.add_node(pydot.Node("S_"+str(291), shape="circle" ))

# Or, without using an intermediate variable:


# Add edges
#edges from S_0
graph.add_edge(pydot.Edge("S_0", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_0", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_0", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_0", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_0", "S_16", label="*"))
graph.add_edge(pydot.Edge("S_0", "S_17", label="ID"))
graph.add_edge(pydot.Edge("S_0", "S_18", label="("))
graph.add_edge(pydot.Edge("S_0", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_0", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_0", "S_1", label="translation_unit"))
graph.add_edge(pydot.Edge("S_0", "S_2", label="external_declaration"))
graph.add_edge(pydot.Edge("S_0", "S_3", label="function_definition"))
graph.add_edge(pydot.Edge("S_0", "S_4", label="declaration"))
graph.add_edge(pydot.Edge("S_0", "S_5", label="declaration_specifiers"))
graph.add_edge(pydot.Edge("S_0", "S_6", label="declarator"))
graph.add_edge(pydot.Edge("S_0", "S_7", label="type_specifier"))
graph.add_edge(pydot.Edge("S_0", "S_8", label="pointer"))
graph.add_edge(pydot.Edge("S_0", "S_9", label="direct_declarator"))
graph.add_edge(pydot.Edge("S_0", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_0", "S_15", label="class_definition"))

#edges from S_1
graph.add_edge(pydot.Edge("S_1", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_1", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_1", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_1", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_1", "S_16", label="*"))
graph.add_edge(pydot.Edge("S_1", "S_17", label="ID"))
graph.add_edge(pydot.Edge("S_1", "S_18", label="("))
graph.add_edge(pydot.Edge("S_1", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_1", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_1", "S_21", label="external_declaration"))
graph.add_edge(pydot.Edge("S_1", "S_3", label="function_definition"))
graph.add_edge(pydot.Edge("S_1", "S_4", label="declaration"))
graph.add_edge(pydot.Edge("S_1", "S_5", label="declaration_specifiers"))
graph.add_edge(pydot.Edge("S_1", "S_6", label="declarator"))
graph.add_edge(pydot.Edge("S_1", "S_7", label="type_specifier"))
graph.add_edge(pydot.Edge("S_1", "S_8", label="pointer"))
graph.add_edge(pydot.Edge("S_1", "S_9", label="direct_declarator"))
graph.add_edge(pydot.Edge("S_1", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_1", "S_15", label="class_definition"))

#edges from S_5
graph.add_edge(pydot.Edge("S_5", "S_23", label=";"))
graph.add_edge(pydot.Edge("S_5", "S_16", label="*"))
graph.add_edge(pydot.Edge("S_5", "S_17", label="ID"))
graph.add_edge(pydot.Edge("S_5", "S_18", label="("))
graph.add_edge(pydot.Edge("S_5", "S_22", label="declarator"))
graph.add_edge(pydot.Edge("S_5", "S_24", label="init_declarator_list"))
graph.add_edge(pydot.Edge("S_5", "S_8", label="pointer"))
graph.add_edge(pydot.Edge("S_5", "S_9", label="direct_declarator"))
graph.add_edge(pydot.Edge("S_5", "S_25", label="init_declarator"))

#edges from S_6
graph.add_edge(pydot.Edge("S_6", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_6", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_6", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_6", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_6", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_6", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_6", "S_29", label="{"))
graph.add_edge(pydot.Edge("S_6", "S_26", label="declaration_list"))
graph.add_edge(pydot.Edge("S_6", "S_27", label="compound_statement"))
graph.add_edge(pydot.Edge("S_6", "S_28", label="declaration"))
graph.add_edge(pydot.Edge("S_6", "S_30", label="declaration_specifiers"))
graph.add_edge(pydot.Edge("S_6", "S_7", label="type_specifier"))
graph.add_edge(pydot.Edge("S_6", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_6", "S_15", label="class_definition"))

#edges from S_7
graph.add_edge(pydot.Edge("S_7", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_7", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_7", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_7", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_7", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_7", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_7", "S_31", label="declaration_specifiers"))
graph.add_edge(pydot.Edge("S_7", "S_7", label="type_specifier"))
graph.add_edge(pydot.Edge("S_7", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_7", "S_15", label="class_definition"))

#edges from S_8
graph.add_edge(pydot.Edge("S_8", "S_17", label="ID"))
graph.add_edge(pydot.Edge("S_8", "S_18", label="("))
graph.add_edge(pydot.Edge("S_8", "S_32", label="direct_declarator"))

#edges from S_9
graph.add_edge(pydot.Edge("S_8", "S_33", label="["))
graph.add_edge(pydot.Edge("S_8", "S_34", label="("))

#edges from S_16
graph.add_edge(pydot.Edge("S_16", "S_35", label="pointer"))

#edges from S_18
graph.add_edge(pydot.Edge("S_18", "S_16", label="*"))
graph.add_edge(pydot.Edge("S_18", "S_17", label="ID"))
graph.add_edge(pydot.Edge("S_18", "S_18", label="("))
graph.add_edge(pydot.Edge("S_18", "S_8", label="pointer"))
graph.add_edge(pydot.Edge("S_18", "S_9", label="direct_declarator"))
graph.add_edge(pydot.Edge("S_18", "S_36", label="declarator"))

#edges from S_19
graph.add_edge(pydot.Edge("S_19", "S_38", label="ID"))

#edges from S_22
graph.add_edge(pydot.Edge("S_22", "S_41", label="="))
graph.add_edge(pydot.Edge("S_22", "S_29", label="{"))
graph.add_edge(pydot.Edge("S_22", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_22", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_22", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_22", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_22", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_22", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_22", "S_30", label="declaration_specifiers"))
graph.add_edge(pydot.Edge("S_22", "S_39", label="declaration_list"))
graph.add_edge(pydot.Edge("S_22", "S_40", label="compound_statement"))
graph.add_edge(pydot.Edge("S_22", "S_28", label="declaration"))
graph.add_edge(pydot.Edge("S_22", "S_7", label="type_specifier"))
graph.add_edge(pydot.Edge("S_22", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_22", "S_15", label="class_definition"))

#edges from S_24
graph.add_edge(pydot.Edge("S_24", "S_42", label=";"))
graph.add_edge(pydot.Edge("S_24", "S_43", label="\,"))

#edges from S_26
graph.add_edge(pydot.Edge("S_26", "S_29", label="{"))
graph.add_edge(pydot.Edge("S_26", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_26", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_26", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_26", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_26", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_26", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_26", "S_44", label="compound_statement"))
graph.add_edge(pydot.Edge("S_26", "S_45", label="declaration"))
graph.add_edge(pydot.Edge("S_26", "S_7", label="type_specifier"))
graph.add_edge(pydot.Edge("S_26", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_26", "S_15", label="class_definition"))
graph.add_edge(pydot.Edge("S_26", "S_30", label="declaration_specifiers"))

#edges from S_29
graph.add_edge(pydot.Edge("S_29", "S_57", label="cin"))
graph.add_edge(pydot.Edge("S_29", "S_59", label="cout"))
graph.add_edge(pydot.Edge("S_29", "S_29", label="{"))
graph.add_edge(pydot.Edge("S_29", "S_56", label=";"))
graph.add_edge(pydot.Edge("S_29", "S_61", label="IF"))
graph.add_edge(pydot.Edge("S_29", "S_63", label="WHILE"))
graph.add_edge(pydot.Edge("S_29", "S_64", label="FOR"))
graph.add_edge(pydot.Edge("S_29", "S_65", label="CONTINUE"))
graph.add_edge(pydot.Edge("S_29", "S_66", label="BREAK"))
graph.add_edge(pydot.Edge("S_29", "S_67", label="RETURN"))
graph.add_edge(pydot.Edge("S_29", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_29", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_29", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_29", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_29", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_29", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_29", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_29", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_29", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_29", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_29", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_29", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_29", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_29", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_29", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_29", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_29", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_29", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_29", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_29", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_29", "S_62", label="("))
graph.add_edge(pydot.Edge("S_29", "S_46", label="statement_list"))
graph.add_edge(pydot.Edge("S_29", "S_47", label="declaration_list"))
graph.add_edge(pydot.Edge("S_29", "S_48", label="statement"))
graph.add_edge(pydot.Edge("S_29", "S_28", label="declaration"))
graph.add_edge(pydot.Edge("S_29", "S_49", label="input_statement"))
graph.add_edge(pydot.Edge("S_29", "S_50", label="output_statement"))
graph.add_edge(pydot.Edge("S_29", "S_51", label="compound_statement"))
graph.add_edge(pydot.Edge("S_29", "S_52", label="expression_statement"))
graph.add_edge(pydot.Edge("S_29", "S_53", label="selection_statement"))
graph.add_edge(pydot.Edge("S_29", "S_54", label="iteration_statement"))
graph.add_edge(pydot.Edge("S_29", "S_55", label="jump_statement"))
graph.add_edge(pydot.Edge("S_29", "S_30", label="declaration_specifiers"))
graph.add_edge(pydot.Edge("S_29", "S_60", label="expression"))
graph.add_edge(pydot.Edge("S_29", "S_7", label="type_specifier "))
graph.add_edge(pydot.Edge("S_29", "S_68", label="assignment_expression"))
graph.add_edge(pydot.Edge("S_29", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_29", "S_15", label="class_definition "))
graph.add_edge(pydot.Edge("S_29", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_29", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_29", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_29", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_29", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_29", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_29", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_29", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_29", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_29", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_29", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_29", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_29", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_29", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_29", "S_96", label="multiplicative_expression "))

#edges from S_30
graph.add_edge(pydot.Edge("S_30", "S_23", label=";"))
graph.add_edge(pydot.Edge("S_30", "S_16", label=" *"))
graph.add_edge(pydot.Edge("S_30", "S_17", label=" ID "))
graph.add_edge(pydot.Edge("S_30", "S_18", label="("))
graph.add_edge(pydot.Edge("S_30", "S_24", label=" init_declarator_list"))
graph.add_edge(pydot.Edge("S_30", "S_25", label=" init_declarator"))
graph.add_edge(pydot.Edge("S_30", "S_97", label="declator"))
graph.add_edge(pydot.Edge("S_30", "S_8", label="pointer"))
graph.add_edge(pydot.Edge("S_30", "S_9", label="direct_diclator"))

#edges from S_32
graph.add_edge(pydot.Edge("S_32", "S_33", label="["))
graph.add_edge(pydot.Edge("S_33", "S_34", label="("))

#edges from S_33
graph.add_edge(pydot.Edge("S_33", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_33", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_33", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_33", "S_87", label="TRUE"))
graph.add_edge(pydot.Edge("S_33", "S_88", label="FALSE"))
graph.add_edge(pydot.Edge("S_33", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_33", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_33", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_33", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_33", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_33", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_33", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_33", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_33", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_33", "S_99", label="]"))
graph.add_edge(pydot.Edge("S_33", "S_98", label="constant_expression"))
graph.add_edge(pydot.Edge("S_33", "S_100", label="conditional_expression "))
graph.add_edge(pydot.Edge("S_33", "S_71", label="logical_or_expression "))
graph.add_edge(pydot.Edge("S_33", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_33", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_33", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_33", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_33", "S_93", label="equality_expression"))
graph.add_edge(pydot.Edge("S_33", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_33", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_33", "S_96", label=" multiplicative_expression "))
graph.add_edge(pydot.Edge("S_33", "S_76", label="cast_expression "))
graph.add_edge(pydot.Edge("S_33", "S_101", label="unary_expression"))
graph.add_edge(pydot.Edge("S_33", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_33", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_33", "S_78", label="primary_expression"))

#edges from S_34
graph.add_edge(pydot.Edge("S_34", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_34", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_34", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_34", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_34", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_34", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_34", "S_107", label="ID"))
graph.add_edge(pydot.Edge("S_34", "S_104", label=")"))
graph.add_edge(pydot.Edge("S_34", "S_103", label="parameter_list"))
graph.add_edge(pydot.Edge("S_34", "S_105", label="identifier_list"))
graph.add_edge(pydot.Edge("S_34", "S_106", label="parameter_declaration"))
graph.add_edge(pydot.Edge("S_34", "S_108", label="declaration_specifiers"))
graph.add_edge(pydot.Edge("S_34", "S_7", label="type_specifier"))
graph.add_edge(pydot.Edge("S_34", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_34", "S_15", label="class_definition "))

#edges from S_36
graph.add_edge(pydot.Edge("S_36", "S_109", label=")"))

#edges from S_37
graph.add_edge(pydot.Edge("S_37", "S_110", label="{"))

#edges from S_38
graph.add_edge(pydot.Edge("S_38", "S_111", label="{"))

#edges from S_39
graph.add_edge(pydot.Edge("S_39", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_39", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_39", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_39", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_39", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_39", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_39", "S_29", label="{"))
graph.add_edge(pydot.Edge("S_39", "S_112", label="compound_statement"))
graph.add_edge(pydot.Edge("S_39", "S_45", label="declaration"))
graph.add_edge(pydot.Edge("S_39", "S_7", label="type_specifier"))
graph.add_edge(pydot.Edge("S_39", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_39", "S_15", label="class_definition"))
graph.add_edge(pydot.Edge("S_39", "S_30", label="declaration_specifiers"))

#edges from S_41
graph.add_edge(pydot.Edge("S_41", "S_115", label="{"))
graph.add_edge(pydot.Edge("S_41", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_41", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_41", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_41", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_41", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_41", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_41", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_41", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_41", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_41", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_41", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_41", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_41", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_41", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_41", "S_62", label="("))
graph.add_edge(pydot.Edge("S_41", "S_114", label="assingment_expression"))
graph.add_edge(pydot.Edge("S_41", "S_169", label="conditional_expression "))
graph.add_edge(pydot.Edge("S_41", "S_71", label="logical_or_expression "))
graph.add_edge(pydot.Edge("S_41", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_41", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_41", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_41", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_41", "S_93", label="equality_expression"))
graph.add_edge(pydot.Edge("S_41", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_41", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_41", "S_96", label=" multiplicative_expression "))
graph.add_edge(pydot.Edge("S_41", "S_76", label="cast_expression "))
graph.add_edge(pydot.Edge("S_41", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_41", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_41", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_41", "S_78", label="primary_expression"))

#edges from S_43
graph.add_edge(pydot.Edge("S_43", "S_16", label="*"))
graph.add_edge(pydot.Edge("S_43", "S_17", label="ID"))
graph.add_edge(pydot.Edge("S_43", "S_18", label="("))
graph.add_edge(pydot.Edge("S_43", "S_116", label=" init_declarator"))
graph.add_edge(pydot.Edge("S_43", "S_97", label="declator"))
graph.add_edge(pydot.Edge("S_43", "S_8", label="pointer"))
graph.add_edge(pydot.Edge("S_43", "S_9", label="direct_diclator"))

#edges from S_46
graph.add_edge(pydot.Edge("S_46", "S_57", label="cin"))
graph.add_edge(pydot.Edge("S_46", "S_59", label="cout"))
graph.add_edge(pydot.Edge("S_46", "S_29", label="{"))
graph.add_edge(pydot.Edge("S_46", "S_56", label=";"))
graph.add_edge(pydot.Edge("S_46", "S_61", label="IF"))
graph.add_edge(pydot.Edge("S_46", "S_63", label="WHILE"))
graph.add_edge(pydot.Edge("S_46", "S_64", label="FOR"))
graph.add_edge(pydot.Edge("S_46", "S_65", label="CONTINUE"))
graph.add_edge(pydot.Edge("S_46", "S_66", label="BREAK"))
graph.add_edge(pydot.Edge("S_46", "S_67", label="RETURN"))
graph.add_edge(pydot.Edge("S_46", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_46", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_46", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_46", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_46", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_46", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_46", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_46", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_46", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_46", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_46", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_46", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_46", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_46", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_46", "S_62", label="("))
graph.add_edge(pydot.Edge("S_46", "S_117", label="}"))
graph.add_edge(pydot.Edge("S_46", "S_118", label="statement"))
graph.add_edge(pydot.Edge("S_46", "S_49", label="input_statement"))
graph.add_edge(pydot.Edge("S_46", "S_50", label="output_statement"))
graph.add_edge(pydot.Edge("S_46", "S_51", label="compound_statement"))
graph.add_edge(pydot.Edge("S_46", "S_52", label="expression_statement"))
graph.add_edge(pydot.Edge("S_46", "S_53", label="selection_statement"))
graph.add_edge(pydot.Edge("S_46", "S_54", label="iteration_statement"))
graph.add_edge(pydot.Edge("S_46", "S_55", label="jump_statement"))
graph.add_edge(pydot.Edge("S_46", "S_30", label="declaration_specifiers"))
graph.add_edge(pydot.Edge("S_46", "S_60", label="expression"))
graph.add_edge(pydot.Edge("S_46", "S_7", label="type_specifier "))
graph.add_edge(pydot.Edge("S_46", "S_68", label="assignment_expression"))
graph.add_edge(pydot.Edge("S_46", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_46", "S_15", label="class_definition "))
graph.add_edge(pydot.Edge("S_46", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_46", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_46", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_46", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_46", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_46", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_46", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_46", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_46", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_46", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_46", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_46", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_46", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_46", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_46", "S_96", label="multiplicative_expression "))

#edges from S_47
graph.add_edge(pydot.Edge("S_47", "S_57", label="cin"))
graph.add_edge(pydot.Edge("S_47", "S_59", label="cout"))
graph.add_edge(pydot.Edge("S_47", "S_29", label="{"))
graph.add_edge(pydot.Edge("S_47", "S_56", label=";"))
graph.add_edge(pydot.Edge("S_47", "S_61", label="IF"))
graph.add_edge(pydot.Edge("S_47", "S_63", label="WHILE"))
graph.add_edge(pydot.Edge("S_47", "S_64", label="FOR"))
graph.add_edge(pydot.Edge("S_47", "S_65", label="CONTINUE"))
graph.add_edge(pydot.Edge("S_47", "S_66", label="BREAK"))
graph.add_edge(pydot.Edge("S_47", "S_67", label="RETURN"))
graph.add_edge(pydot.Edge("S_47", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_47", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_47", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_47", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_47", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_47", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_47", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_47", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_47", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_47", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_47", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_47", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_47", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_47", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_47", "S_62", label="("))
graph.add_edge(pydot.Edge("S_47", "S_119", label="}"))
graph.add_edge(pydot.Edge("S_47", "S_48", label="statement"))
graph.add_edge(pydot.Edge("S_47", "S_120", label="statement_list"))
graph.add_edge(pydot.Edge("S_47", "S_49", label="input_statement"))
graph.add_edge(pydot.Edge("S_47", "S_45", label="declaration"))
graph.add_edge(pydot.Edge("S_47", "S_50", label="output_statement"))
graph.add_edge(pydot.Edge("S_47", "S_51", label="compound_statement"))
graph.add_edge(pydot.Edge("S_47", "S_52", label="expression_statement"))
graph.add_edge(pydot.Edge("S_47", "S_53", label="selection_statement"))
graph.add_edge(pydot.Edge("S_47", "S_54", label="iteration_statement"))
graph.add_edge(pydot.Edge("S_47", "S_55", label="jump_statement"))
graph.add_edge(pydot.Edge("S_47", "S_30", label="declaration_specifiers"))
graph.add_edge(pydot.Edge("S_47", "S_60", label="expression"))
graph.add_edge(pydot.Edge("S_47", "S_7", label="type_specifier "))
graph.add_edge(pydot.Edge("S_47", "S_68", label="assignment_expression"))
graph.add_edge(pydot.Edge("S_47", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_47", "S_15", label="class_definition "))
graph.add_edge(pydot.Edge("S_47", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_47", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_47", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_47", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_47", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_47", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_47", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_47", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_47", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_47", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_47", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_47", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_47", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_47", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_47", "S_96", label="multiplicative_expression "))

#edges from S_57
graph.add_edge(pydot.Edge("S_57", "S_121", label="IN"))

#edges from S_59
graph.add_edge(pydot.Edge("S_59", "S_123", label="OUT"))
graph.add_edge(pydot.Edge("S_59", "S_122", label="out_list"))

#edges from S_60
graph.add_edge(pydot.Edge("S_60", "S_124", label=";"))
graph.add_edge(pydot.Edge("S_60", "S_125", label="\,"))

#edges from S_61
graph.add_edge(pydot.Edge("S_61", "S_126", label="("))

#edges from S_62
graph.add_edge(pydot.Edge("S_62", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_62", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_62", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_62", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_62", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_62", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_62", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_62", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_62", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_62", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_62", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_62", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_62", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_62", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_62", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_62", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_62", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_62", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_62", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_62", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_62", "S_62", label="("))
graph.add_edge(pydot.Edge("S_62", "S_128", label="type_name"))
graph.add_edge(pydot.Edge("S_62", "S_127", label="expression"))
graph.add_edge(pydot.Edge("S_62", "S_130", label="type_specifier"))
graph.add_edge(pydot.Edge("S_62", "S_129", label="specifier_qualifier_list "))
graph.add_edge(pydot.Edge("S_62", "S_68", label="assignment_expression"))
graph.add_edge(pydot.Edge("S_62", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_62", "S_15", label="class_definition "))
graph.add_edge(pydot.Edge("S_62", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_62", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_62", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_62", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_62", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_62", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_62", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_62", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_62", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_62", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_62", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_62", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_62", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_62", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_62", "S_96", label="multiplicative_expression "))

#edges from S_63
graph.add_edge(pydot.Edge("S_63", "S_131", label="("))

#edges from S_64
graph.add_edge(pydot.Edge("S_64", "S_132", label="("))

#edges from S_65
graph.add_edge(pydot.Edge("S_63", "S_133", label=";"))

#edges from S_66;
graph.add_edge(pydot.Edge("S_63", "S_134", label=";"))

#edges from S_67
graph.add_edge(pydot.Edge("S_67", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_67", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_67", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_67", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_67", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_67", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_67", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_67", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_67", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_67", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_67", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_67", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_67", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_67", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_67", "S_62", label="("))
graph.add_edge(pydot.Edge("S_67", "S_135", label=";"))
graph.add_edge(pydot.Edge("S_67", "S_136", label="expression"))
graph.add_edge(pydot.Edge("S_67", "S_68", label="assignment_expression"))
graph.add_edge(pydot.Edge("S_67", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_67", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_67", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_67", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_67", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_67", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_67", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_67", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_67", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_67", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_67", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_67", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_67", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_67", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_67", "S_96", label="multiplicative_expression "))

#edges from S_70
graph.add_edge(pydot.Edge("S_70", "S_138", label="="))
graph.add_edge(pydot.Edge("S_70", "S_141", label="MOD_EQ"))
graph.add_edge(pydot.Edge("S_70", "S_139", label="MUL_EQ"))
graph.add_edge(pydot.Edge("S_70", "S_140", label="DIV_EQ"))
graph.add_edge(pydot.Edge("S_70", "S_142", label="ADD_EQ"))
graph.add_edge(pydot.Edge("S_70", "S_143", label="SUB_EQ"))
graph.add_edge(pydot.Edge("S_70", "S_145", label="XOR_EQ"))
graph.add_edge(pydot.Edge("S_70", "S_146", label="OR_EQ"))
graph.add_edge(pydot.Edge("S_70", "S_144", label="AND_EQ"))
graph.add_edge(pydot.Edge("S_70", "S_137", label="assingment_operator"))

#edges from S_71
graph.add_edge(pydot.Edge("S_71", "S_147", label="?"))
graph.add_edge(pydot.Edge("S_71", "S_148", label="OR"))

#edges from S_72
graph.add_edge(pydot.Edge("S_72", "S_149", label="["))
graph.add_edge(pydot.Edge("S_72", "S_150", label="("))
graph.add_edge(pydot.Edge("S_72", "S_151", label="."))
graph.add_edge(pydot.Edge("S_72", "S_152", label="PTR"))
graph.add_edge(pydot.Edge("S_72", "S_153", label="INC"))
graph.add_edge(pydot.Edge("S_72", "S_154", label="DEC"))

#edges from S_73
graph.add_edge(pydot.Edge("S_73", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_73", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_73", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_73", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_73", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_73", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_73", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_73", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_73", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_73", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_73", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_73", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_73", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_73", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_73", "S_156", label="("))
graph.add_edge(pydot.Edge("S_73", "S_155", label="unary_expression"))
graph.add_edge(pydot.Edge("S_73", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_73", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_73", "S_78", label="primary_experession"))

#edges from S_74
graph.add_edge(pydot.Edge("S_74", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_74", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_74", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_74", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_74", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_74", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_74", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_74", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_74", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_74", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_74", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_74", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_74", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_74", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_74", "S_156", label="("))
graph.add_edge(pydot.Edge("S_74", "S_157", label="unary_expression"))
graph.add_edge(pydot.Edge("S_74", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_74", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_74", "S_78", label="primary_experession"))

#edges from S_75
graph.add_edge(pydot.Edge("S_75", "S_102", label="("))
graph.add_edge(pydot.Edge("S_75", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_75", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_75", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_75", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_75", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_75", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_75", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_75", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_75", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_75", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_75", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_75", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_75", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_75", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_75", "S_101", label="unary_expression"))
graph.add_edge(pydot.Edge("S_75", "S_158", label="cast_expression"))
graph.add_edge(pydot.Edge("S_75", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_75", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_75", "S_78", label="primary_experession"))

#edges from S_77
graph.add_edge(pydot.Edge("S_77", "S_159", label="AND"))

#edges from S_85
graph.add_edge(pydot.Edge("S_85", "S_160", label="|"))

#edges from S_91
graph.add_edge(pydot.Edge("S_91", "S_161", label="^"))

#edges from S_92
graph.add_edge(pydot.Edge("S_77", "S_162", label="&"))

#edges from S_93
graph.add_edge(pydot.Edge("S_93", "S_163", label="EQUAL"))
graph.add_edge(pydot.Edge("S_93", "S_164", label="NE"))

#edges from S_94
graph.add_edge(pydot.Edge("S_94", "S_165", label="<"))
graph.add_edge(pydot.Edge("S_94", "S_166", label=">"))
graph.add_edge(pydot.Edge("S_94", "S_167", label="LE"))
graph.add_edge(pydot.Edge("S_94", "S_168", label="GE"))

#edges from S_95
graph.add_edge(pydot.Edge("S_95", "S_169", label="+"))
graph.add_edge(pydot.Edge("S_95", "S_170", label="-"))

#edges from S_96
graph.add_edge(pydot.Edge("S_96", "S_171", label="*"))
graph.add_edge(pydot.Edge("S_96", "S_172", label="/,"))
graph.add_edge(pydot.Edge("S_96", "S_173", label="%"))

#edges from S_97
graph.add_edge(pydot.Edge("S_97", "S_41", label="="))

#edges from S_98
graph.add_edge(pydot.Edge("S_98", "S_174", label="]"))

#edges from S_102
graph.add_edge(pydot.Edge("S_102", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_102", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_102", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_102", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_102", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_102", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_102", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_102", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_102", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_102", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_102", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_102", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_102", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_102", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_102", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_102", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_102", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_102", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_102", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_102", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_102", "S_62", label="("))
graph.add_edge(pydot.Edge("S_102", "S_128", label="type_name"))
graph.add_edge(pydot.Edge("S_102", "S_127", label="expression"))
graph.add_edge(pydot.Edge("S_102", "S_130", label="type_specifier"))
graph.add_edge(pydot.Edge("S_102", "S_129", label="specifier_qualifier_list "))
graph.add_edge(pydot.Edge("S_102", "S_68", label="assignment_expression"))
graph.add_edge(pydot.Edge("S_102", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_102", "S_15", label="class_definition "))
graph.add_edge(pydot.Edge("S_102", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_102", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_102", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_102", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_102", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_102", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_102", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_102", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_102", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_102", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_102", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_102", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_102", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_102", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_102", "S_96", label="multiplicative_expression "))

#edegs from S_103
graph.add_edge(pydot.Edge("S_103", "S_175", label=")"))
graph.add_edge(pydot.Edge("S_103", "S_176", label="\,"))

#edegs from S_105
graph.add_edge(pydot.Edge("S_105", "S_177", label=")"))
graph.add_edge(pydot.Edge("S_105", "S_178", label="\,"))

#edegs from S_108
graph.add_edge(pydot.Edge("S_108", "S_16", label="*"))
graph.add_edge(pydot.Edge("S_108", "S_17", label="ID"))
graph.add_edge(pydot.Edge("S_108", "S_183", label="("))
graph.add_edge(pydot.Edge("S_108", "S_184", label="[,"))
graph.add_edge(pydot.Edge("S_108", "S_179", label="declarator"))
graph.add_edge(pydot.Edge("S_108", "S_180", label="abs_declaratortract"))
graph.add_edge(pydot.Edge("S_108", "S_181", label="pointer"))
graph.add_edge(pydot.Edge("S_108", "S_9", label="direct_declarator"))
graph.add_edge(pydot.Edge("S_108", "S_182", label="direct_abstract_declarator"))

#edges from S_110
graph.add_edge(pydot.Edge("S_110", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_110", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_110", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_110", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_110", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_110", "S_185", label="struct_declaration_list"))
graph.add_edge(pydot.Edge("S_110", "S_186", label="struct_declaration"))
graph.add_edge(pydot.Edge("S_110", "S_187", label="specifier_qualifier_list"))
graph.add_edge(pydot.Edge("S_110", "S_130", label="type_specifier"))
graph.add_edge(pydot.Edge("S_110", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_110", "S_15", label="class_definition"))

#edges from S_111
graph.add_edge(pydot.Edge("S_111", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_111", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_111", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_111", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_111", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_111", "S_20", label="CLASS"))
graph.add_edge(pydot.Edge("S_111", "S_16", label="*"))
graph.add_edge(pydot.Edge("S_111", "S_17", label="ID"))
graph.add_edge(pydot.Edge("S_111", "S_18", label="("))
graph.add_edge(pydot.Edge("S_111", "S_191", label="declaration"))
graph.add_edge(pydot.Edge("S_111", "S_189", label="class_member"))
graph.add_edge(pydot.Edge("S_111", "S_5", label="declaration_specifier"))
graph.add_edge(pydot.Edge("S_111", "S_188", label="class_member_list"))
graph.add_edge(pydot.Edge("S_111", "S_9", label="direct_declaration"))
graph.add_edge(pydot.Edge("S_111", "S_8", label="pointer"))
graph.add_edge(pydot.Edge("S_111", "S_6", label="declarator"))
graph.add_edge(pydot.Edge("S_111", "S_187", label="specifier_qualifier_list"))
graph.add_edge(pydot.Edge("S_111", "S_7", label="type_specifier"))
graph.add_edge(pydot.Edge("S_111", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_111", "S_15", label="class_definition"))

#edges from S_115
graph.add_edge(pydot.Edge("S_115", "S_115", label="{"))
graph.add_edge(pydot.Edge("S_115", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_115", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_115", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_115", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_115", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_115", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_115", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_115", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_115", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_115", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_115", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_115", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_115", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_115", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_115", "S_62", label="("))
graph.add_edge(pydot.Edge("S_115", "S_192", label="initializer_list"))
graph.add_edge(pydot.Edge("S_115", "S_193", label="initializer"))
graph.add_edge(pydot.Edge("S_115", "S_114", label="assignment_expression"))
graph.add_edge(pydot.Edge("S_115", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_115", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_115", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_115", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_115", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_115", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_115", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_115", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_115", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_115", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_115", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_115", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_115", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_115", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_115", "S_96", label="multiplicative_expression "))

#edges from S_120
graph.add_edge(pydot.Edge("S_120", "S_57", label="cin"))
graph.add_edge(pydot.Edge("S_120", "S_59", label="cout"))
graph.add_edge(pydot.Edge("S_120", "S_29", label="{"))
graph.add_edge(pydot.Edge("S_120", "S_56", label=";"))
graph.add_edge(pydot.Edge("S_120", "S_61", label="IF"))
graph.add_edge(pydot.Edge("S_120", "S_63", label="WHILE"))
graph.add_edge(pydot.Edge("S_120", "S_64", label="FOR"))
graph.add_edge(pydot.Edge("S_120", "S_65", label="CONTINUE"))
graph.add_edge(pydot.Edge("S_120", "S_66", label="BREAK"))
graph.add_edge(pydot.Edge("S_120", "S_67", label="RETURN"))
graph.add_edge(pydot.Edge("S_120", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_120", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_120", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_120", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_120", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_120", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_120", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_120", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_120", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_120", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_120", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_120", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_120", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_120", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_120", "S_62", label="("))
graph.add_edge(pydot.Edge("S_120", "S_194", label="}"))
graph.add_edge(pydot.Edge("S_120", "S_118", label="statement"))
graph.add_edge(pydot.Edge("S_120", "S_49", label="input_statement"))
graph.add_edge(pydot.Edge("S_120", "S_50", label="output_statement"))
graph.add_edge(pydot.Edge("S_120", "S_51", label="compound_statement"))
graph.add_edge(pydot.Edge("S_120", "S_52", label="expression_statement"))
graph.add_edge(pydot.Edge("S_120", "S_53", label="selection_statement"))
graph.add_edge(pydot.Edge("S_120", "S_54", label="iteration_statement"))
graph.add_edge(pydot.Edge("S_120", "S_55", label="jump_statement"))
graph.add_edge(pydot.Edge("S_120", "S_60", label="expression"))
graph.add_edge(pydot.Edge("S_120", "S_68", label="assignment_expression"))
graph.add_edge(pydot.Edge("S_120", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_120", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_120", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_120", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_120", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_120", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_120", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_120", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_120", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_120", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_120", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_120", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_120", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_120", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_120", "S_96", label="multiplicative_expression "))

#edges from S_121
graph.add_edge(pydot.Edge("S_121", "S_195", label="ID"))

#edges from S_122
graph.add_edge(pydot.Edge("S_122", "S_196", label=";"))
graph.add_edge(pydot.Edge("S_122", "S_197", label="OUT"))


#edges from S_123
graph.add_edge(pydot.Edge("S_123", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_123", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_123", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_123", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_123", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_123", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_123", "S_156", label="("))
graph.add_edge(pydot.Edge("S_123", "S_198", label="primary_expression"))

#edges from S_125
graph.add_edge(pydot.Edge("S_125", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_125", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_125", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_125", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_125", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_125", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_125", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_125", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_125", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_125", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_125", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_125", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_125", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_125", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_125", "S_62", label="("))
graph.add_edge(pydot.Edge("S_125", "S_199", label="assignment_expression"))
graph.add_edge(pydot.Edge("S_125", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_125", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_125", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_125", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_125", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_125", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_125", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_125", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_125", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_125", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_125", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_125", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_125", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_125", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_125", "S_96", label="multiplicative_expression "))

#edges from S_126
graph.add_edge(pydot.Edge("S_126", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_126", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_126", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_126", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_126", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_126", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_126", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_126", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_126", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_126", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_126", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_126", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_126", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_126", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_126", "S_62", label="("))
graph.add_edge(pydot.Edge("S_126", "S_200", label="expression"))
graph.add_edge(pydot.Edge("S_126", "S_68", label="assingment_expression"))
graph.add_edge(pydot.Edge("S_126", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_126", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_126", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_126", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_126", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_126", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_126", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_126", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_126", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_126", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_126", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_126", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_126", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_126", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_126", "S_96", label="multiplicative_expression "))

#edges from S_127
graph.add_edge(pydot.Edge("S_127", "S_201", label=")"))
graph.add_edge(pydot.Edge("S_127", "S_125", label="\,"))

#edegs from S_128
graph.add_edge(pydot.Edge("S_128", "S_202", label="("))

#edges from S_129
graph.add_edge(pydot.Edge("S_129", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_129", "S_205", label="("))
graph.add_edge(pydot.Edge("S_129", "S_184", label="["))
graph.add_edge(pydot.Edge("S_129", "S_203", label="abstract_declarator"))
graph.add_edge(pydot.Edge("S_129", "S_204", label="pointer"))
graph.add_edge(pydot.Edge("S_129", "S_182", label="direct_abstarct_declarator"))

#edges from S_130
graph.add_edge(pydot.Edge("S_130", "S_10", label="VOID"))
graph.add_edge(pydot.Edge("S_130", "S_11", label="CHAR"))
graph.add_edge(pydot.Edge("S_130", "S_13", label="BOOL"))
graph.add_edge(pydot.Edge("S_130", "S_12", label="INT"))
graph.add_edge(pydot.Edge("S_130", "S_19", label="STRUCT"))
graph.add_edge(pydot.Edge("S_130", "S_206", label="specifier_qualifier_list"))
graph.add_edge(pydot.Edge("S_130", "S_130", label="type_specifier"))
graph.add_edge(pydot.Edge("S_130", "S_14", label="struct_specifier"))
graph.add_edge(pydot.Edge("S_130", "S_15", label="class_definition"))

#edges from S_131
graph.add_edge(pydot.Edge("S_131", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_131", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_131", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_131", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_131", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_131", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_131", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_131", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_131", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_131", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_131", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_131", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_131", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_131", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_131", "S_62", label="("))
graph.add_edge(pydot.Edge("S_131", "S_207", label="expression"))
graph.add_edge(pydot.Edge("S_131", "S_68", label="assingment_expression"))
graph.add_edge(pydot.Edge("S_131", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_131", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_131", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_131", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_131", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_131", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_131", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_131", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_131", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_131", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_131", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_131", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_131", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_131", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_131", "S_96", label="multiplicative_expression "))

#edges from S_132
graph.add_edge(pydot.Edge("S_132", "S_56", label=";"))
graph.add_edge(pydot.Edge("S_132", "S_73", label="INC"))
graph.add_edge(pydot.Edge("S_132", "S_74", label="DEC"))
graph.add_edge(pydot.Edge("S_132", "S_79", label="&"))
graph.add_edge(pydot.Edge("S_132", "S_80", label="*"))
graph.add_edge(pydot.Edge("S_132", "S_81", label="+"))
graph.add_edge(pydot.Edge("S_132", "S_82", label="-"))
graph.add_edge(pydot.Edge("S_132", "S_83", label="~"))
graph.add_edge(pydot.Edge("S_132", "S_84", label="!"))
graph.add_edge(pydot.Edge("S_132", "S_58", label="ID"))
graph.add_edge(pydot.Edge("S_132", "S_86", label="INTEGER"))
graph.add_edge(pydot.Edge("S_132", "S_87", label="STRING"))
graph.add_edge(pydot.Edge("S_132", "S_88", label="TRUE"))
graph.add_edge(pydot.Edge("S_132", "S_89", label="FALSE"))
graph.add_edge(pydot.Edge("S_132", "S_90", label="CHARACTER"))
graph.add_edge(pydot.Edge("S_132", "S_62", label="("))
graph.add_edge(pydot.Edge("S_132", "S_60", label="expression"))
graph.add_edge(pydot.Edge("S_132", "S_208", label="assingment_expression"))
graph.add_edge(pydot.Edge("S_132", "S_69", label="conditional_expression"))
graph.add_edge(pydot.Edge("S_132", "S_70", label="unary_expression"))
graph.add_edge(pydot.Edge("S_132", "S_71", label="logical_or_expression"))
graph.add_edge(pydot.Edge("S_132", "S_72", label="postfix_expression"))
graph.add_edge(pydot.Edge("S_132", "S_75", label="unary_operator"))
graph.add_edge(pydot.Edge("S_132", "S_76", label="cast_expression"))
graph.add_edge(pydot.Edge("S_132", "S_77", label="logical_and_expression"))
graph.add_edge(pydot.Edge("S_132", "S_78", label="primary_expression"))
graph.add_edge(pydot.Edge("S_132", "S_85", label="inclusive_or_expression"))
graph.add_edge(pydot.Edge("S_132", "S_91", label="exclusive_or_expression"))
graph.add_edge(pydot.Edge("S_132", "S_92", label="and_expression"))
graph.add_edge(pydot.Edge("S_132", "S_93", label="equality_expression "))
graph.add_edge(pydot.Edge("S_132", "S_94", label="relational_expression"))
graph.add_edge(pydot.Edge("S_132", "S_95", label=" additive_expression "))
graph.add_edge(pydot.Edge("S_132", "S_96", label="multiplicative_expression "))

#edges from S_136
graph.add_edge(pydot.Edge("S_136", "S_209", label=";"))
graph.add_edge(pydot.Edge("S_136", "S_125", label="\,"))



graph.write_pdf("graph.pdf")